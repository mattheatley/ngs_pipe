READ ME

This software helps facilitate the processing of ngs data on a SLURM cluster according to parameters commonly used by Levi Yant's lab.



Requirements
  
  - python 3.7.3; os, sys, operator, time, argparse, subprocess, re, collections, statistics, itertools
  - trimmomatic 0.39
  - picard 2.21.1
  - bwa 0.7.17
  - samtools 1.9
  - gatk4 4.1.4.0
  - vcftools 0.1.16

N.B. Software can be installed within a conda environment (see below).



SETUP

Create the initial working directory (default: $HOME/ngs_pipe) & sub-directories.

  python pipe_ngs.py -setup [-p </path/to>] [-d <directory_name>]



PREPARE FILES

Move input files to the relevant sub-directories as follows:

  /ref.gen
    genome.fasta
    
  /00.fastqs
    /Sample_1
      Reads_1.fastq.gz
      Reads_2.fastq.gz
    /Sample_2
      Reads.fastq.gz
      ...

N.B. Read type (single/paired-end) is automatically assigned depending on whether or not ALL sample fastqs can be asigned a read pair member.
     At present only novogene read have been tested but it might work with similar naming conventions.



INDEX

Index reference genome.

  python pipe_ngs.py -index



PROCESS DATA

Sequentially processes ngs data.

  python pipe_ngs.py -stage <number> [-x <ploidy>]


  Stage   Description

  1       Merge fastqs
  2       Trim reads
  3       Map reads
  4       Mark duplicates
  5       Call haplotypes
  6       Combine sample
  7       Genotype samples
  8       Re-combine parts
  9       Filter sites
  10      Filter depth

N.B. Single/paired-end reads will be processed differently between stages 1-3.
     Ploidy only needs to be specified when calling haplotypes at stage 5.



ADDITIONAL SETTINGS

  Flag                  Default             Description

  -pa <partition>       stage-specific      specify SLURM partition
  -no <nodes>           stage-specific      specify SLURM nodes
  -nt <ntasks>          stage-specific      specify SLURM ntasks
  -me <memory[units]>   stage-specific      specify SLURM memory
  -wt <HH:MM:SS>        stage-specific      specify SLURM walltime
 
  -u                    current user        specify SLURM user name
  -m                    None                specify email address to receive SLURM notifications
  -e <environment>      ngs_env             specify conda environment with software installed 
  -l <limit>            100                 specify task submission limit i.e. how many tasks can be submitted at once
  
  -review                                   review task SLURM accounting data for specified stage (i.e. -stage <number> [-x <ploidy>] -review)
  -pipe                                     submit pipeline itself as a task; automatically submits tasks from the hpcc up to the task submission limit
  -sb                                       activate sub buddy; automatically re-submits any stuck tasks i.e. with 'failed' in NODELIST(REASON)
  
